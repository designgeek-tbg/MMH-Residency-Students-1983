<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Medical Class Photo Gallery</title>
  
  <!--
  HOW TO USE THIS FILE
  1) Put this file anywhere on your computer.
  2) Create a folder next to it called `images/` and drop your photos in there.
  3) Duplicate the <figure> blocks in <main> for each photo. 
     - thumbnail `src` can be the same as the full image to start.
     - set `data-full` to the large/original image path.
     - put the person’s name in <figcaption>.
  4) Open this file in your browser. Click an image to zoom.

  Tips
  - For fast load times, consider creating smaller thumbnails and keeping `data-full` as the high‑res original.
  - Filenames: use hyphens and short names, e.g. `john-smith-1969.jpg`.
  - Accessibility: keep meaningful alt text.
  -->

  <style>
    :root{
      --bg: #0b0d10;
      --panel: #111418;
      --text: #e8eef2;
      --muted: #a8b3bd;
      --accent: #6bb1ff;
      --gap: 1rem;
      --radius: 14px;
    }
    html,body{height:100%}
    body{
      margin:0;
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
      background: linear-gradient(180deg, #0d1116, #0b0d10);
      color: var(--text);
    }
    header{
      max-width: 1100px; margin: 2rem auto 0; padding: 0 1rem;
    }
    header h1{font-weight:700; letter-spacing:0.2px; margin:0 0 0.25rem 0}
    header p{margin:0; color:var(--muted)}

    .wrap{max-width:1100px; margin: 1rem auto 3rem; padding: 0 1rem}

    .grid{
      display:grid; grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); gap: var(--gap);
    }
    figure{margin:0; background: var(--panel); border-radius: var(--radius); overflow: hidden; border: 1px solid #1a1f25}
    figure img{display:block; width:100%; height:auto; aspect-ratio: 4/3; object-fit:cover; transition: transform .2s ease}
    figure:hover img{transform: scale(1.02)}
    figcaption{padding: .6rem .8rem; text-align:center; font-size:.95rem; color: var(--text); border-top: 1px solid #1a1f25}

    /* Lightbox */
    .lightbox{position: fixed; inset:0; display:none; align-items:center; justify-content:center; backdrop-filter: blur(6px); background: rgba(0,0,0,.66); z-index:9999}
    .lightbox[aria-hidden="false"]{display:flex}
    .lb-stage{position: relative; width: min(96vw, 1400px); height: min(92vh, 900px); display:flex; align-items:center; justify-content:center}
    .lb-img{max-width:100%; max-height:100%; user-select:none; cursor: zoom-in; transition: transform .15s ease}
    .lb-zoomed{cursor: grab}
    .lb-caption{position:absolute; left:0; right:0; bottom:0; padding: .6rem 1rem; text-align:center; color: var(--text); background: linear-gradient(180deg, transparent, rgba(0,0,0,.75)); font-size:1rem}

    .lb-controls{position:absolute; inset:0; pointer-events:none}
    .lb-btn{pointer-events:auto; position:absolute; top:50%; transform: translateY(-50%); background: rgba(17,20,24,.8); border:1px solid #2a323a; color:var(--text); width:44px; height:44px; border-radius:10px; display:grid; place-items:center; font-size:22px}
    .lb-btn:hover{background: rgba(17,20,24,.95)}
    .prev{left:12px}
    .next{right:12px}

    .close{pointer-events:auto; position:absolute; top:12px; right:12px; background: rgba(17,20,24,.8); border:1px solid #2a323a; color:var(--text); width:44px; height:44px; border-radius:10px; font-size:22px; display:grid; place-items:center}
    .close:hover{background: rgba(17,20,24,.95)}

    .help{position:absolute; top:12px; left:12px; pointer-events:none; color:var(--muted); font-size:.9rem; opacity:.85}
    .kbd{font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; background:#0e1318; border:1px solid #2a323a; padding:.05rem .35rem; border-radius:6px}

    /* Responsive tweaks */
    @media (max-width:520px){
      figcaption{font-size:.9rem}
      .lb-caption{font-size:.95rem}
    }
  </style>
</head>
<body>
  <header>
    <h1>Dad’s Medical Class</h1>
    <p>Click a photo to view and zoom. Use arrow keys to navigate; press Esc to close.</p>
  </header>

  <div class="wrap">
    <main class="grid" aria-live="polite">
      <!-- EXAMPLE ITEMS — duplicate and edit -->
      <figure>
        <img 
          src="images/example-1.jpg" 
          data-full="images/example-1.jpg" 
          alt="Portrait of Dr. Jane Doe, 1972"
          loading="lazy" decoding="async" sizes="(max-width: 600px) 100vw, 33vw" />
        <figcaption>Dr Jane Doe</figcaption>
      </figure>

      <figure>
        <img 
          src="images/example-2.jpg" 
          data-full="images/example-2.jpg" 
          alt="Group shot outside the lecture theatre, 1972"
          loading="lazy" decoding="async" sizes="(max-width: 600px) 100vw, 33vw" />
        <figcaption>Class group outside lecture theatre</figcaption>
      </figure>

      <figure>
        <img 
          src="images/example-3.jpg" 
          data-full="images/example-3.jpg" 
          alt="Dr John Smith in lab, 1971"
          loading="lazy" decoding="async" sizes="(max-width: 600px) 100vw, 33vw" />
        <figcaption>Dr John Smith</figcaption>
      </figure>
      <!-- END EXAMPLES -->
    </main>
  </div>

  <!-- Lightbox -->
  <div class="lightbox" id="lightbox" role="dialog" aria-modal="true" aria-hidden="true">
    <div class="lb-stage" id="stage">
      <img id="lbImg" class="lb-img" alt="" />
      <p id="lbCap" class="lb-caption" aria-live="polite"></p>
      <div class="lb-controls">
        <button class="lb-btn prev" id="prevBtn" aria-label="Previous image" title="Previous (←)">❮</button>
        <button class="lb-btn next" id="nextBtn" aria-label="Next image" title="Next (→)">❯</button>
      </div>
      <button class="close" id="closeBtn" aria-label="Close (Esc)" title="Close (Esc)">✕</button>
      <div class="help">Click to <span class="kbd">zoom</span>; drag to pan; 
        <span class="kbd">←</span>/<span class="kbd">→</span> to navigate</div>
    </div>
  </div>

  <script>
    (function(){
      const figures = Array.from(document.querySelectorAll('.grid figure'));
      const items = figures.map((fig) => {
        const img = fig.querySelector('img');
        const cap = fig.querySelector('figcaption');
        return {
          thumb: img.getAttribute('src'),
          full: img.dataset.full || img.getAttribute('src'),
          alt: img.getAttribute('alt') || '',
          caption: cap ? cap.textContent.trim() : ''
        };
      });

      const lb = document.getElementById('lightbox');
      const lbImg = document.getElementById('lbImg');
      const lbCap = document.getElementById('lbCap');
      const closeBtn = document.getElementById('closeBtn');
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
      const stage = document.getElementById('stage');

      let index = 0; 
      let zoomed = false; 
      let startX = 0, startY = 0; 
      let offsetX = 0, offsetY = 0;
      let dragging = false;
      const ZOOM_SCALE = 2.4;

      function open(i){
        index = i; update();
        lb.setAttribute('aria-hidden', 'false');
        document.body.style.overflow = 'hidden';
        lbImg.focus();
      }
      function close(){
        lb.setAttribute('aria-hidden', 'true');
        document.body.style.overflow = '';
        resetZoom();
      }
      function update(){
        const it = items[index];
        lbImg.src = it.full; lbImg.alt = it.alt || it.caption;
        lbCap.textContent = it.caption;
        resetZoom();
      }
      function prev(){ index = (index - 1 + items.length) % items.length; update(); }
      function next(){ index = (index + 1) % items.length; update(); }

      function resetZoom(){
        zoomed = false; offsetX = 0; offsetY = 0; dragging = false;
        lbImg.classList.remove('lb-zoomed');
        lbImg.style.transform = 'translate(0px, 0px) scale(1)';
      }
      function toggleZoom(evt){
        zoomed = !zoomed;
        if(zoomed){
          lbImg.classList.add('lb-zoomed');
          lbImg.style.transform = `translate(0px, 0px) scale(${ZOOM_SCALE})`;
        }else{
          resetZoom();
        }
      }

      function onDown(e){
        if(!zoomed) return;
        dragging = true;
        lbImg.style.cursor = 'grabbing';
        startX = (e.touches ? e.touches[0].clientX : e.clientX) - offsetX;
        startY = (e.touches ? e.touches[0].clientY : e.clientY) - offsetY;
      }
      function onMove(e){
        if(!dragging) return;
        const x = (e.touches ? e.touches[0].clientX : e.clientX);
        const y = (e.touches ? e.touches[0].clientY : e.clientY);
        offsetX = x - startX; offsetY = y - startY;
        lbImg.style.transform = `translate(${offsetX}px, ${offsetY}px) scale(${ZOOM_SCALE})`;
      }
      function onUp(){ if(!zoomed) return; dragging = false; lbImg.style.cursor = 'grab'; }

      // Wire up grid clicks
      figures.forEach((fig, i) => {
        fig.addEventListener('click', () => open(i));
        fig.addEventListener('keydown', (e) => {
          if(e.key === 'Enter' || e.key === ' '){ e.preventDefault(); open(i); }
        });
        fig.tabIndex = 0; // make focusable
      });

      // Lightbox controls
      lb.addEventListener('click', (e) => {
        // click on backdrop closes; click on image toggles zoom
        if(e.target === lb) close();
      });
      closeBtn.addEventListener('click', close);
      prevBtn.addEventListener('click', prev);
      nextBtn.addEventListener('click', next);

      // Zoom / pan
      lbImg.addEventListener('click', toggleZoom);
      lbImg.addEventListener('mousedown', onDown);
      window.addEventListener('mousemove', onMove);
      window.addEventListener('mouseup', onUp);
      lbImg.addEventListener('touchstart', onDown, {passive:true});
      lbImg.addEventListener('touchmove', onMove, {passive:true});
      lbImg.addEventListener('touchend', onUp);

      // Keyboard
      window.addEventListener('keydown', (e) => {
        if(lb.getAttribute('aria-hidden') === 'true') return;
        if(e.key === 'Escape') close();
        else if(e.key === 'ArrowLeft') prev();
        else if(e.key === 'ArrowRight') next();
        else if(e.key === 'Enter'){ toggleZoom(); }
      });

      // Prevent image dragging default ghost
      lbImg.addEventListener('dragstart', (e)=> e.preventDefault());
    })();
  </script>
</body>
</html>
